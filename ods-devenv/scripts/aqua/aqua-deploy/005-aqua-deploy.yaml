apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: aqua-db
    deployedby: aqua-yaml
  name: aqua-db
  namespace: aqua
spec:
  ports:
  - port: 5432
    targetPort: 0
  selector:
    app: aqua-db
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: aqua-db
    deployedby: aqua-yaml
  name: aqua-db
  namespace: aqua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aqua-db
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: aqua-db
      name: aqua-db
      namespace: aqua
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        envFrom:
        - configMapRef:
            name: aqua-csp-db-config
        image: registry.aquasec.com/database:6.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 5
        name: aqua-db
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 5
        resources: {}
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db
      initContainers:
      - command:
        - sh
        - -c
        - 'chown 70:70 /var/lib/postgresql/data && [ -f $PGDATA/server.key ] && chmod 600 $PGDATA/server.key || echo ''OK'' '
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        envFrom:
        - configMapRef:
            name: aqua-csp-db-config
        image: registry.aquasec.com/database:6.0
        name: aqua-db-init
        resources: {}
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db
      restartPolicy: Always
      securityContext:
        fsGroup: 11433
        runAsGroup: 70
        runAsUser: 70
      serviceAccount: aqua-sa
      serviceAccountName: aqua-sa
      volumes:
      - name: postgres-db
        persistentVolumeClaim:
          claimName: aqua-db-pvc
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: aqua-audit-db
    deployedby: aqua-yaml
  name: aqua-audit-db
  namespace: aqua
spec:
  ports:
  - port: 5432
    targetPort: 0
  selector:
    app: aqua-audit-db
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: aqua-audit-db
    deployedby: aqua-yaml
  name: aqua-audit-db
  namespace: aqua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aqua-audit-db
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: aqua-audit-db
      name: aqua-audit-db
      namespace: aqua
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-audit-db
        envFrom:
        - configMapRef:
            name: aqua-csp-db-config
        image: registry.aquasec.com/database:6.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 5
        name: aqua-audit-db
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 5
        resources: {}
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db
      initContainers:
      - command:
        - sh
        - -c
        - 'chown 70:70 /var/lib/postgresql/data && [ -f $PGDATA/server.key ] && chmod 600 $PGDATA/server.key || echo ''OK'' '
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-audit-db
        envFrom:
        - configMapRef:
            name: aqua-csp-db-config
        image: registry.aquasec.com/database:6.0
        name: aqua-audit-db-init
        resources: {}
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db
      restartPolicy: Always
      securityContext:
        fsGroup: 11433
        runAsGroup: 70
        runAsUser: 70
      serviceAccount: aqua-sa
      serviceAccountName: aqua-sa
      volumes:
      - name: postgres-db
        persistentVolumeClaim:
          claimName: aqua-audit-db-pvc
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: aqua-web
  name: aqua-web
  namespace: aqua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aqua-web
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: aqua-web
      name: aqua-web
    spec:
      containers:
      - env:
        - name: AQUA_PUBSUB_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        - name: SCALOCK_AUDIT_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-audit-db
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        envFrom:
        - configMapRef:
            name: aqua-csp-server-config
        - secretRef:
            name: aqua-csp-server-secret
        image: registry.aquasec.com/console:6.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        name: aqua-web
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        resources: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 11433
        runAsGroup: 11433
        runAsUser: 11431
      serviceAccount: aqua-sa
      serviceAccountName: aqua-sa
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: aqua-gateway
  name: aqua-gateway
  namespace: aqua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aqua-gateway
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: aqua-gateway
      name: aqua-gateway
    spec:
      containers:
      - env:
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        - name: SCALOCK_AUDIT_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-audit-db
        envFrom:
        - configMapRef:
            name: aqua-csp-server-config
        image: registry.aquasec.com/gateway:6.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 8082
          initialDelaySeconds: 60
          periodSeconds: 30
        name: aqua-gateway
        ports:
        - containerPort: 3622
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          tcpSocket:
            port: 8443
        resources: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 11433
        runAsGroup: 11433
        runAsUser: 11431
      serviceAccount: aqua-sa
      serviceAccountName: aqua-sa
status: {}
